Legend:

  A - recognized idiom
  D - deleted loop
  I - callee inlined here
  L - interleaved loop
  M - multithreaded
  P - peeled loop
  S - distributed loop
  U - completely unrolled loop
  u - partially unrolled loop
  V - vectorized loop
  X - loop interchanged with enclosing loop
  Z - versioned loop for LICM
  + - additional messages below

----------

 1.         #include <stdio.h>
 2.         
 3.         #define NX 102400
 4.         
 5.         int main(void)
 6.         {
 7.             double vecA[NX], vecB[NX], vecC[NX];
 8.         
 9.             /* Initialization of the vectors */
10.             for (int i = 0; i < NX; i++) {
11.                 vecA[i] = 1.0 / ((double) (NX - i));
12.                 vecB[i] = vecA[i] * vecA[i];
13.             }
14.         
15.             // TODO: Implement vector addition vecC = vecA + vecB and use OpenMP
16.             //       for computing it in the device
17.             #pragma omp target teams
18.             #pragma omp loop
19.             for (int i = 0; i < NX; i++) {
20.                  vecC[i] = vecA[i] + vecB[i];
21.         
22.             }
23.         
24.             double sum = 0.0;
25.             /* Compute the check value */
26.             for (int i = 0; i < NX; i++) {
27.                 sum += vecC[i];
28.             }
29.             printf("Reduction sum: %18.16f\n", sum);
30.         
31.             return 0;
32.         }
